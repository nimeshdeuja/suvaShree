{"version":3,"sources":["Components/Shared/Utility.ts","Components/Server_requests/Firebase.ts","Components/Server_requests/Members.ts","Components/Server_requests/Roles.ts","Components/Shared/AuthProvider.tsx","Components/Server_requests/Families.ts","Components/Dashboard/Dashboard.tsx","Components/Login/Login.tsx","Components/Shared/PrivateRoute.tsx","App.tsx","index.tsx"],"names":["Log","message","error","process","REACT_APP_ENV","console","log","uuid","dt","Date","getTime","replace","c","r","Math","random","floor","toString","firebaseApp","apiKey","REACT_APP_FIREBASE_KEY","authDomain","REACT_APP_FIREBASE_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","initializeApp","auth","getAuth","getAuthentication","Promise","resolve","reject","currentUser","id","ids","REACT_APP_ADMIN_ID","split","includes","checkUserIfAuthorize","uid","SignOut","signOut","then","catch","db","getFirestore","dbCollection","collection","CreateMember","data","email","q","query","where","getDocs","querySnapshot","list","forEach","doc","push","length","dataDoc","setDoc","status","AuthContext","React","createContext","AuthProvider","children","useState","authLoading","setAuthLoading","userData","setUserData","useEffect","signOutHandler","onAuthStateChanged","user","memberData","roles","member","role","filter","item","roleId","birth_date","name","getUserData","Provider","value","Dashboard","useContext","table","onClick","members","contactPerson","CreateFamily","updateDoc","UpdateFamily","deleteDoc","code","UpdateMember","Login","emailRef","useRef","passwordRef","from","useLocation","state","pathname","to","type","defaultValue","ref","current","password","signInWithEmailAndPassword","userCredential","JSON","stringify","SignIn","PrivateRoute","exact","path","RouteComponent","component","render","props","location","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d1b10c9.chunk.js","sourcesContent":["export const Log = (message:string, error?:any) => {\n    if (process.env.REACT_APP_ENV === \"development\") {\n      if (error) {\n        console.error(message + \" \" + error);\n      } else {\n        console.log(message);\n      }\n    }\n  };\n\nexport const uuid =()=>{\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n}\n\nexport const checkUserIfAuthorize = (id:string) => {\n  let ids = process.env.REACT_APP_ADMIN_ID\n    ? process.env.REACT_APP_ADMIN_ID\n    : \"\";\n  ids.replace(\" \", \"\");\n  ids.split(\",\");\n  return ids.includes(id);\n};\n","import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  signOut,\n  createUserWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { checkUserIfAuthorize, Log } from \"../Shared/Utility\";\n\nconst firebaseApp = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport const app = initializeApp(firebaseApp);\nexport const auth = getAuth();\n\nexport const getAuthentication =()=>{\n  return new Promise<number>((resolve, reject) => {\n      if(auth && auth.currentUser && checkUserIfAuthorize(auth.currentUser.uid)){\n          resolve(200)\n      } else {\n          Log('Unauthorized: ');\n          reject(401)\n      } \n  })\n}\n\nexport const SignUp = (email: string, password: string) => {\n  return new Promise((resolve, reject) => {\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        Log(\n          `Successfully signing up: ${JSON.stringify(\n            userCredential.user,\n            null,\n            1\n          )}`,\n          null\n        );\n        resolve(userCredential.user);\n      })\n      .catch((error) => {\n        Log(`Error on SignUp:`, error);\n        reject(error);\n      });\n  });\n};\n\nexport const SignIn = (email: string, password: string) => {\n  return new Promise((resolve, reject) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        Log(\n          `Successfully signing in: ${JSON.stringify(\n            userCredential.user,\n            null,\n            1\n          )}`\n        );\n        resolve(200);\n      })\n      .catch((error) => {\n        Log(`Error on SignIn:`, error);\n        reject(error);\n      });\n  });\n};\n\nexport const SignOut = () => {\n  return new Promise((resolve, reject) => {\n    signOut(auth)\n      .then(() => {\n        resolve(200);\n        Log(`Successfully signing out:`, null);\n      })\n      .catch((error) => {\n        Log(`Error on SignOut:`, error);\n        reject(error);\n      });\n  });\n};\n","import { collection, doc, getDocs, getFirestore, query, setDoc, where, deleteDoc, updateDoc } from \"@firebase/firestore\";\nimport { Log, uuid } from \"../Shared/Utility\";\nimport { app, getAuthentication } from \"./Firebase\";\n\nconst db = getFirestore(app);\nlet dbCollection = collection(db, 'members')\n\nexport const GetMember=(id:string)=>{\n    return new Promise<object | number>((resolve, reject)=>{\n        const q = query(dbCollection, where(\"uid\", \"==\", id));\n        getDocs(q).then((querySnapshot)=>{\n            let list:object[] = []\n            querySnapshot.forEach((doc) => list.push(doc.data()));\n                if(list.length>0) {\n                    resolve(list[0])\n                } else {\n                    reject(404)\n                };\n        }).catch(error=>{\n            Log(`Error on get members list:`, error);\n            reject(500);\n        })\n    })\n}\n\nconst CheckForEmail=(email:string)=>{\n    return new Promise<number>((resolve, reject)=>{\n        const q = query(dbCollection, where(\"email\", \"==\", email));\n        getDocs(q).then((querySnapshot)=>{\n            let list:object[] = []\n            querySnapshot.forEach((doc) => list.push(doc.data()));\n                if(list.length>0) reject(403);\n                else resolve(200);\n        }).catch(error=>{\n            Log(`Error on get users list:`, error);\n            reject(500);\n        })\n    })\n}\n\n\ninterface createMemberProps {\n    email:string,\n    name:string,\n    birth_date:string,\n    roleId:string,\n    uid:string,\n}\nexport const CreateMember = (data:createMemberProps)=>{\n    return new Promise<number>((resolve, reject)=>{\n        CheckForEmail(data.email).then(()=>{\n            getAuthentication()\n                .then(()=>{\n                    let id = uuid();\n                    const dataDoc = doc(dbCollection, id);\n                        setDoc(dataDoc, {...data, id:id,}).then(() => {\n                            Log(`Member has been successfully created!`);\n                            resolve(200)\n                        })\n                        .catch((error) => {\n                            Log(`Error on CreateMember:`, error);\n                            reject(500)\n                        });\n                })\n                .catch(status=>reject(status))\n        }).catch(status=>{\n            if(status === 403) {\n                Log(`Already has account width this email`, status);\n                reject(status)\n            } else {\n                Log(`Error on CreateMember`, status);\n                reject(500)\n            }\n        })\n    })\n}\n\ninterface UpdateMemberProps {\n    name:string,\n    birth_date:string,\n    id:string,\n    roleId:string\n}\nexport const UpdateMember= ({name, birth_date, roleId, id}:UpdateMemberProps)=>{\n    new Promise<number>((resolve, reject) => {\n        let data = {\n            name,\n            birth_date,\n            roleId,\n        }\n        getAuthentication()\n            .then(()=>{\n                const dataDoc = doc(dbCollection, id);\n                updateDoc(dataDoc, data)\n                    .then(() => {\n                        Log(`Member (${id}) has been successfully updated!`);\n                        resolve(200)\n                    })\n                    .catch((error) => {\n                        Log(`Error on UpdateMember:`, error);\n                        reject(500)\n                    });\n            })\n            .catch(status=>reject(status))\n    })\n}\n\nexport const DeleteMember = (id:string)=>{\n    new Promise<number>((resolve, reject) => {\n        deleteDoc(doc(dbCollection, id))\n            .then(()=>{\n                Log(`Member (${id}) has been successfully deleted!`);\n                resolve(200)\n            })\n            .catch(error=>{\n                Log(`Error on DeleteMember:`, error);\n                reject(500)\n            })\n    })\n}","import { collection, getDocs, getFirestore} from \"@firebase/firestore\";\nimport { Log } from \"../Shared/Utility\";\nimport { app } from \"./Firebase\";\n\nconst db = getFirestore(app);\nlet dbCollection = collection(db, 'roles')\n\nexport const GetRoles =()=>{\n    return new Promise<object[]>((resolve, reject) => {\n        getDocs(dbCollection)\n            .then((querySnapshot)=>{\n                let list:object[] = []\n                querySnapshot.forEach((doc) => list.push(doc.data()));\n                resolve(list)\n            })\n            .catch(error=>{\n                Log(`Error on GetRoles`, error);\n                reject(500)\n            })\n    })\n   \n}","import React, { useState, useEffect } from 'react'\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { GetMember } from '../Server_requests/Members';\nimport { Log } from './Utility';\nimport { auth, SignOut } from '../Server_requests/Firebase';\nimport { GetRoles } from '../Server_requests/Roles';\n\ntype Users = {\n        birth_date:string,\n        email:string,\n        id:string,\n        name:string,\n        uid:string,\n        role:{\n            id:string,\n            name:string,\n            code:number\n        } \n    } | null\ninterface AuthContextProps {\n    authLoading: boolean,\n    setAuthLoading: (authLoading: boolean) => void,\n    userData:Users,\n    setUserData: (user: Users) => void,\n}\nexport const AuthContext = React.createContext({} as AuthContextProps);\n\nconst getUserData =(member:any, roles:any[])=>{\n    let role = roles.filter(item=>item.id === member.roleId);\n    return {\n        birth_date:member.birth_date,\n        email:member.email,\n        id:member.id,\n        name:member.name,\n        uid:member.uid,\n        role:role.length>0?role[0]:null\n    }\n}\n\nexport const AuthProvider = ({ children }: {\n    children: React.ReactNode\n}) => {\n    const [authLoading, setAuthLoading] = useState<boolean>(true);\n    const [userData, setUserData] = useState<Users>(null)\n\n    useEffect(() => {\n        const signOutHandler =()=>{\n            SignOut();\n            setAuthLoading(false)\n            setUserData(null);\n        }\n        if (authLoading) {\n            onAuthStateChanged(auth, (user) => {\n                if(user) {\n                    setAuthLoading(true);\n                    GetMember(user.uid)\n                        .then(memberData=>{\n                            GetRoles()\n                                .then(roles=>{\n                                    let data = getUserData(memberData, roles);\n                                    if(data && data.role){\n                                        setUserData(data);\n                                        setAuthLoading(false);\n                                    } else {\n                                        Log('Role can not be empty!');\n                                        signOutHandler();\n                                    }\n                                })\n                                .catch(status=>{\n                                    Log('Error on GetRoles:', status);\n                                    signOutHandler();\n                                })\n                        })\n                        .catch(status=>{\n                            Log('Error on GetMember:', status);\n                            signOutHandler();\n                        })\n                } else {\n                    setAuthLoading(false);\n                }\n            })\n        }\n    }, [authLoading])\n\n    return (\n        <AuthContext.Provider\n            value={{\n                authLoading,\n                setAuthLoading,\n                userData,\n                setUserData\n            }}\n        >\n            {authLoading ? 'Loading page...' : children}\n        </AuthContext.Provider>\n    )\n}\n","import { collection, doc, getDocs, getFirestore, setDoc, updateDoc, deleteDoc } from '@firebase/firestore';\nimport { Log, uuid } from '../Shared/Utility';\nimport { app, getAuthentication } from './Firebase';\n\nconst db = getFirestore(app);\nlet dbCollection = collection(db, 'families')\n\ninterface CreateFamilyProps {\n    name:string,\n    members?:string[]|null,\n    contactPerson?:string | null,\n}\nexport const CreateFamily=({name, members, contactPerson}:CreateFamilyProps)=>{\n    new Promise<number>((resolve, reject) => {\n        getAuthentication()\n            .then(()=>{\n                let id = uuid();\n                const dataDoc = doc(dbCollection, id);\n                let data = {\n                    name,\n                    id,\n                    members:members?members:null,\n                    contactPerson:contactPerson?contactPerson:null\n                }\n                setDoc(dataDoc, data)\n                    .then(() => {\n                        Log(`Family has been successfully created!`);\n                        resolve(200)\n                    })\n                    .catch((error) => {\n                        Log(`Error on CreateFamily:`, error);\n                        reject(500)\n                    })\n            })\n            .catch(status=>reject(status))\n    })\n}\n\nexport const GetFamilies = () => {\n    return new Promise<object[] | number>((resolve, reject) => {\n        getDocs(dbCollection)\n            .then((querySnapshot)=>{\n                let list:object[] = []\n                querySnapshot.forEach((doc) => list.push(doc.data()));\n                resolve(list) \n            })\n            .catch(error=>{\n                Log(`Error on GetFamily`, error);\n                reject(500)\n            })\n    })\n}\n\ninterface UpdateFamilyProps {\n    name:string,\n    id:string\n    members?:string[]|null,\n    contactPerson?:string | null,\n}\nexport const UpdateFamily = ({name, members, contactPerson, id}:UpdateFamilyProps)=>{\n    new Promise<number>((resolve, reject) => {\n        let data = {\n            name,\n            members:members?members:null,\n            contactPerson:contactPerson?contactPerson:null\n        }\n        getAuthentication()\n            .then(()=>{\n                const dataDoc = doc(dbCollection, id);\n                updateDoc(dataDoc, data)\n                    .then(() => {\n                        Log(`Family (${id}) has been successfully updated!`);\n                        resolve(200)\n                    })\n                    .catch((error) => {\n                        Log(`Error on UpdateFamily:`, error);\n                        reject(500)\n                    });\n            })\n            .catch(status=>reject(status))\n    })\n}\n\nexport const DeleteFamily =(id:string)=>{\n    new Promise<number>((resolve, reject) => {\n        deleteDoc(doc(dbCollection, id))\n            .then(()=>{\n                Log(`Family (${id}) has been successfully deleted!`);\n                resolve(200)\n            })\n            .catch(error=>{\n                Log(`Error on DeleteFamily:`, error);\n                reject(500)\n            })  \n    })\n}","import { useContext, useEffect } from \"react\";\n\nimport { AuthContext } from \"../Shared/AuthProvider\";\nimport { CreateMember, DeleteMember, UpdateMember } from \"../Server_requests/Members\";\nimport { SignOut } from \"../Server_requests/Firebase\";\nimport { CreateFamily, DeleteFamily, GetFamilies, UpdateFamily } from \"../Server_requests/Families\";\n\nconst Dashboard = () => {\n  const { userData,  setUserData, setAuthLoading } = useContext(AuthContext);\n  const logoutHandler = () => {\n    SignOut();\n    setAuthLoading(true);\n    setUserData(null);\n  };\n\n  useEffect(() => {\n    GetFamilies()\n      .then((list) => {\n        console.table(list);\n      })\n      .catch((error) => {\n        console.log(\"🚀 ~ file: Dashboard.tsx ~ line 18 ~ Get ~ error\", error);\n      });\n    }, []);\n\n\n  const addMemberHandler = () => {\n    let toSend ={\n      birth_date:'1987-11-28',\n      email:'test@gmail.com',\n      name:'test',\n      roleId:'e42528c2-cd09-4876-98d7-11f55c927947',\n      uid:'22phfZ0fuVMwyHuG5ERk8dz7U7k2',\n    }\n    CreateMember(toSend)\n  }\n\n  const updateMemberHandler =()=>{\n    let toSend ={\n      birth_date:'1987-11-28',\n      name:'Nimesh Deuja',\n      roleId:'e42528c2-cd09-4876-98d7-11f55c927947',\n      id:'e05fbb51-6207-43b6-a9d9-933022633a2d'\n    }\n    UpdateMember(toSend)\n  }\n\n  return (\n    <div>\n      From Dashboard\n      <button onClick={logoutHandler}>Sign Out</button>\n      <button\n        onClick={() =>\n          CreateFamily({\n            name: \"nimesh deuja\"\n          })\n        }\n      >\n        Add Family\n      </button>\n      <button\n        onClick={() =>\n          UpdateFamily({\n            name:'testing',\n            contactPerson:'c4164deb-56c5-42a6-a815-2f192c6a8234',\n            id:'c4164deb-56c5-42a6-a815-2f192c6a8234'\n          })\n        }\n      >\n        update Family\n      </button>\n      <button\n        onClick={() => DeleteFamily(\"c4164deb-56c5-42a6-a815-2f192c6a8234\")}\n      >\n        Delete Family\n      </button>\n      {userData?.role?.code === 1 && <button onClick={addMemberHandler}>Add member</button>}\n      {userData?.role?.code === 1 && <button onClick={updateMemberHandler}>Update member</button>}\n      {userData?.role?.code === 1 && <button onClick={()=>DeleteMember('ea2b48e8-a8b6-42d3-98b0-9d3186b6ed70')}>Delete member</button>}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { useContext, useRef } from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { SignIn } from \"../Server_requests/Firebase\";\n\nimport { AuthContext } from \"../Shared/AuthProvider\";\n\ninterface LocationState {\n    from: {\n        pathname: string;\n    };\n}\nconst Login = () => {\n    const emailRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n\n    const { userData } = useContext(AuthContext);\n\n    const location = useLocation<LocationState>();\n    const { from } = location.state || { from: { pathname: \"/dashboard\" } };\n\n    const signInHandler = () => {\n        let email = emailRef.current?.value\n        let password = passwordRef.current?.value\n        if (email && password) SignIn(email, password)\n    }\n\n    if (userData) return <Redirect to={from} />;\n    return (\n        <div>\n            From login\n            <input type='text' defaultValue='imnimesh017@gmail.com' ref={emailRef} />\n            <input type='text' defaultValue='qwerty' ref={passwordRef} />\n            <button onClick={signInHandler}>Sign In</button>\n        </div>\n    )\n}\n\nexport default Login\n","import { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthProvider\";\n\ninterface PrivateRouteProps {\n    exact: boolean,\n    path: string,\n    component: any\n}\nconst PrivateRoute = ({ exact, path, component: RouteComponent }: PrivateRouteProps) => {\n    const { userData } = useContext(AuthContext);\n    return (\n        <Route\n            exact={exact}\n            path={path}\n            render={(props) => {\n                if (userData) return <RouteComponent {...props} />\n                return <Redirect\n                    to={{\n                        pathname: \"/\",\n                        state: { from: props.location },\n                    }}\n                />\n            }\n            }\n        />\n    )\n}\n\nexport default PrivateRoute\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\n\nimport Login from \"./Components/Login/Login\";\nimport { AuthProvider } from \"./Components/Shared/AuthProvider\";\nimport PrivateRoute from \"./Components/Shared/PrivateRoute\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <PrivateRoute exact path='/dashboard' component={Dashboard} />\n        </Switch>\n      </BrowserRouter>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n/* if (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then((registration) =>\n      console.log(\"Registration successful, scope is:\" + registration.scope)\n    )\n    .catch((err) =>\n      console.log(\"Service worker registration failed, error:\", err)\n    );\n}\n */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}